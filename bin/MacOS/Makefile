# Makefile.in generated by automake 1.16.5 from Makefile.am.
# Progs/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




VPATH = ../../Progs
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/cortex-analysis-tools
pkgincludedir = $(includedir)/cortex-analysis-tools
pkglibdir = $(libdir)/cortex-analysis-tools
pkglibexecdir = $(libexecdir)/cortex-analysis-tools
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = aarch64-apple-darwin24.5.0
host_triplet = aarch64-apple-darwin24.5.0
bin_PROGRAMS = CAT_Surf2Sheet$(EXEEXT) CAT_SurfSheet2Surf$(EXEEXT) \
	CAT_Vol2Surf$(EXEEXT) CAT_SurfCurvature$(EXEEXT) \
	CAT_SurfApplyWarp$(EXEEXT) CAT_SurfApplyWarpValues$(EXEEXT) \
	CAT_SurfArea$(EXEEXT) CAT_SurfRatio$(EXEEXT) \
	CAT_SurfSmooth$(EXEEXT) CAT_SurfPlotValuesAtPoint$(EXEEXT) \
	CAT_SurfPlotValuesAtMaximum$(EXEEXT) \
	CAT_SurfMeasure2Txt$(EXEEXT) CAT_SurfConvert$(EXEEXT) \
	CAT_Surf2Sphere$(EXEEXT) CAT_SurfSeparateClusters$(EXEEXT) \
	CAT_SurfSeparatePolygons$(EXEEXT) \
	CAT_SurfResampleSpherical$(EXEEXT) CAT_SurfResample$(EXEEXT) \
	CAT_SurfResampleMulti$(EXEEXT) CAT_SurfAreaDistortion$(EXEEXT) \
	CAT_SurfAngularDistortion$(EXEEXT) \
	CAT_SurfMetricDistortion$(EXEEXT) CAT_SurfAverage$(EXEEXT) \
	CAT_SurfFixTopology$(EXEEXT) CAT_SurfIsometize$(EXEEXT) \
	CAT_SurfWarp$(EXEEXT) CAT_SurfWarpDemon$(EXEEXT) \
	CAT_SurfSmoothAreal$(EXEEXT) CAT_SurfSmoothLaplacian$(EXEEXT) \
	CAT_SurfSmoothConvexity$(EXEEXT) \
	CAT_SurfSmoothSharpness$(EXEEXT) CAT_SurfHausdorff$(EXEEXT) \
	CAT_SurfSharpness$(EXEEXT) CAT_SurfSelfIntersect$(EXEEXT) \
	CAT_SurfMarkDefects$(EXEEXT) CAT_SurfArtifacts$(EXEEXT) \
	CAT_SurfFractalDimension$(EXEEXT) CAT_SurfRefine$(EXEEXT) \
	CAT_SurfConvexity$(EXEEXT) CAT_VolMarchingCubes$(EXEEXT) \
	CAT_SurfAddValues$(EXEEXT) CAT_SurfSulcusDepth$(EXEEXT) \
	CAT_SurfDepthPotential$(EXEEXT) CAT_SurfCentral2Pial$(EXEEXT) \
	CAT_Surf2ConvexHull$(EXEEXT) CAT_SurfDistance$(EXEEXT) \
	CAT_Test$(EXEEXT) CAT_SurfSmoothDiffusion$(EXEEXT) \
	CAT_VolAmap$(EXEEXT) CAT_VolAverage$(EXEEXT) \
	CAT_VolSmooth$(EXEEXT) CAT_VolSanlm$(EXEEXT) \
	CAT_VolThicknessPbt$(EXEEXT) \
	CAT_SurfResampleSphericalSPH$(EXEEXT) CAT_Surf2SPH$(EXEEXT) \
	CAT_SurfDeform$(EXEEXT) CAT_Surf2PialWhite$(EXEEXT) \
	CAT_SurfCorrectThicknessFolding$(EXEEXT) \
	CAT_SurfReduce$(EXEEXT) CAT_SurfSPH2Surf$(EXEEXT)
subdir = Progs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_bin_SCRIPTS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
CAT_Surf2ConvexHull_SOURCES = CAT_Surf2ConvexHull.c
CAT_Surf2ConvexHull_OBJECTS = CAT_Surf2ConvexHull.$(OBJEXT)
CAT_Surf2ConvexHull_LDADD = $(LDADD)
CAT_Surf2ConvexHull_DEPENDENCIES = ../libCAT.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CAT_Surf2PialWhite_SOURCES = CAT_Surf2PialWhite.c
CAT_Surf2PialWhite_OBJECTS = CAT_Surf2PialWhite.$(OBJEXT)
CAT_Surf2PialWhite_LDADD = $(LDADD)
CAT_Surf2PialWhite_DEPENDENCIES = ../libCAT.la
CAT_Surf2SPH_SOURCES = CAT_Surf2SPH.c
CAT_Surf2SPH_OBJECTS = CAT_Surf2SPH.$(OBJEXT)
CAT_Surf2SPH_LDADD = $(LDADD)
CAT_Surf2SPH_DEPENDENCIES = ../libCAT.la
CAT_Surf2Sheet_SOURCES = CAT_Surf2Sheet.c
CAT_Surf2Sheet_OBJECTS = CAT_Surf2Sheet.$(OBJEXT)
CAT_Surf2Sheet_LDADD = $(LDADD)
CAT_Surf2Sheet_DEPENDENCIES = ../libCAT.la
CAT_Surf2Sphere_SOURCES = CAT_Surf2Sphere.c
CAT_Surf2Sphere_OBJECTS = CAT_Surf2Sphere.$(OBJEXT)
CAT_Surf2Sphere_LDADD = $(LDADD)
CAT_Surf2Sphere_DEPENDENCIES = ../libCAT.la
CAT_SurfAddValues_SOURCES = CAT_SurfAddValues.c
CAT_SurfAddValues_OBJECTS = CAT_SurfAddValues.$(OBJEXT)
CAT_SurfAddValues_LDADD = $(LDADD)
CAT_SurfAddValues_DEPENDENCIES = ../libCAT.la
CAT_SurfAngularDistortion_SOURCES = CAT_SurfAngularDistortion.c
CAT_SurfAngularDistortion_OBJECTS =  \
	CAT_SurfAngularDistortion.$(OBJEXT)
CAT_SurfAngularDistortion_LDADD = $(LDADD)
CAT_SurfAngularDistortion_DEPENDENCIES = ../libCAT.la
CAT_SurfApplyWarp_SOURCES = CAT_SurfApplyWarp.c
CAT_SurfApplyWarp_OBJECTS = CAT_SurfApplyWarp.$(OBJEXT)
CAT_SurfApplyWarp_LDADD = $(LDADD)
CAT_SurfApplyWarp_DEPENDENCIES = ../libCAT.la
CAT_SurfApplyWarpValues_SOURCES = CAT_SurfApplyWarpValues.c
CAT_SurfApplyWarpValues_OBJECTS = CAT_SurfApplyWarpValues.$(OBJEXT)
CAT_SurfApplyWarpValues_LDADD = $(LDADD)
CAT_SurfApplyWarpValues_DEPENDENCIES = ../libCAT.la
CAT_SurfArea_SOURCES = CAT_SurfArea.c
CAT_SurfArea_OBJECTS = CAT_SurfArea.$(OBJEXT)
CAT_SurfArea_LDADD = $(LDADD)
CAT_SurfArea_DEPENDENCIES = ../libCAT.la
CAT_SurfAreaDistortion_SOURCES = CAT_SurfAreaDistortion.c
CAT_SurfAreaDistortion_OBJECTS = CAT_SurfAreaDistortion.$(OBJEXT)
CAT_SurfAreaDistortion_LDADD = $(LDADD)
CAT_SurfAreaDistortion_DEPENDENCIES = ../libCAT.la
CAT_SurfArtifacts_SOURCES = CAT_SurfArtifacts.c
CAT_SurfArtifacts_OBJECTS = CAT_SurfArtifacts.$(OBJEXT)
CAT_SurfArtifacts_LDADD = $(LDADD)
CAT_SurfArtifacts_DEPENDENCIES = ../libCAT.la
CAT_SurfAverage_SOURCES = CAT_SurfAverage.c
CAT_SurfAverage_OBJECTS = CAT_SurfAverage.$(OBJEXT)
CAT_SurfAverage_LDADD = $(LDADD)
CAT_SurfAverage_DEPENDENCIES = ../libCAT.la
CAT_SurfCentral2Pial_SOURCES = CAT_SurfCentral2Pial.c
CAT_SurfCentral2Pial_OBJECTS = CAT_SurfCentral2Pial.$(OBJEXT)
CAT_SurfCentral2Pial_LDADD = $(LDADD)
CAT_SurfCentral2Pial_DEPENDENCIES = ../libCAT.la
CAT_SurfConvert_SOURCES = CAT_SurfConvert.c
CAT_SurfConvert_OBJECTS = CAT_SurfConvert.$(OBJEXT)
CAT_SurfConvert_LDADD = $(LDADD)
CAT_SurfConvert_DEPENDENCIES = ../libCAT.la
CAT_SurfConvexity_SOURCES = CAT_SurfConvexity.c
CAT_SurfConvexity_OBJECTS = CAT_SurfConvexity.$(OBJEXT)
CAT_SurfConvexity_LDADD = $(LDADD)
CAT_SurfConvexity_DEPENDENCIES = ../libCAT.la
CAT_SurfCorrectThicknessFolding_SOURCES =  \
	CAT_SurfCorrectThicknessFolding.c
CAT_SurfCorrectThicknessFolding_OBJECTS =  \
	CAT_SurfCorrectThicknessFolding.$(OBJEXT)
CAT_SurfCorrectThicknessFolding_LDADD = $(LDADD)
CAT_SurfCorrectThicknessFolding_DEPENDENCIES = ../libCAT.la
CAT_SurfCurvature_SOURCES = CAT_SurfCurvature.c
CAT_SurfCurvature_OBJECTS = CAT_SurfCurvature.$(OBJEXT)
CAT_SurfCurvature_LDADD = $(LDADD)
CAT_SurfCurvature_DEPENDENCIES = ../libCAT.la
CAT_SurfDeform_SOURCES = CAT_SurfDeform.c
CAT_SurfDeform_OBJECTS = CAT_SurfDeform.$(OBJEXT)
CAT_SurfDeform_LDADD = $(LDADD)
CAT_SurfDeform_DEPENDENCIES = ../libCAT.la
CAT_SurfDepthPotential_SOURCES = CAT_SurfDepthPotential.c
CAT_SurfDepthPotential_OBJECTS = CAT_SurfDepthPotential.$(OBJEXT)
CAT_SurfDepthPotential_LDADD = $(LDADD)
CAT_SurfDepthPotential_DEPENDENCIES = ../libCAT.la
CAT_SurfDistance_SOURCES = CAT_SurfDistance.c
CAT_SurfDistance_OBJECTS = CAT_SurfDistance.$(OBJEXT)
CAT_SurfDistance_LDADD = $(LDADD)
CAT_SurfDistance_DEPENDENCIES = ../libCAT.la
CAT_SurfFixTopology_SOURCES = CAT_SurfFixTopology.c
CAT_SurfFixTopology_OBJECTS = CAT_SurfFixTopology.$(OBJEXT)
CAT_SurfFixTopology_LDADD = $(LDADD)
CAT_SurfFixTopology_DEPENDENCIES = ../libCAT.la
CAT_SurfFractalDimension_SOURCES = CAT_SurfFractalDimension.c
CAT_SurfFractalDimension_OBJECTS = CAT_SurfFractalDimension.$(OBJEXT)
CAT_SurfFractalDimension_LDADD = $(LDADD)
CAT_SurfFractalDimension_DEPENDENCIES = ../libCAT.la
CAT_SurfHausdorff_SOURCES = CAT_SurfHausdorff.c
CAT_SurfHausdorff_OBJECTS = CAT_SurfHausdorff.$(OBJEXT)
CAT_SurfHausdorff_LDADD = $(LDADD)
CAT_SurfHausdorff_DEPENDENCIES = ../libCAT.la
CAT_SurfIsometize_SOURCES = CAT_SurfIsometize.c
CAT_SurfIsometize_OBJECTS = CAT_SurfIsometize.$(OBJEXT)
CAT_SurfIsometize_LDADD = $(LDADD)
CAT_SurfIsometize_DEPENDENCIES = ../libCAT.la
CAT_SurfMarkDefects_SOURCES = CAT_SurfMarkDefects.c
CAT_SurfMarkDefects_OBJECTS = CAT_SurfMarkDefects.$(OBJEXT)
CAT_SurfMarkDefects_LDADD = $(LDADD)
CAT_SurfMarkDefects_DEPENDENCIES = ../libCAT.la
CAT_SurfMeasure2Txt_SOURCES = CAT_SurfMeasure2Txt.c
CAT_SurfMeasure2Txt_OBJECTS = CAT_SurfMeasure2Txt.$(OBJEXT)
CAT_SurfMeasure2Txt_LDADD = $(LDADD)
CAT_SurfMeasure2Txt_DEPENDENCIES = ../libCAT.la
CAT_SurfMetricDistortion_SOURCES = CAT_SurfMetricDistortion.c
CAT_SurfMetricDistortion_OBJECTS = CAT_SurfMetricDistortion.$(OBJEXT)
CAT_SurfMetricDistortion_LDADD = $(LDADD)
CAT_SurfMetricDistortion_DEPENDENCIES = ../libCAT.la
CAT_SurfPlotValuesAtMaximum_SOURCES = CAT_SurfPlotValuesAtMaximum.c
CAT_SurfPlotValuesAtMaximum_OBJECTS =  \
	CAT_SurfPlotValuesAtMaximum.$(OBJEXT)
CAT_SurfPlotValuesAtMaximum_LDADD = $(LDADD)
CAT_SurfPlotValuesAtMaximum_DEPENDENCIES = ../libCAT.la
CAT_SurfPlotValuesAtPoint_SOURCES = CAT_SurfPlotValuesAtPoint.c
CAT_SurfPlotValuesAtPoint_OBJECTS =  \
	CAT_SurfPlotValuesAtPoint.$(OBJEXT)
CAT_SurfPlotValuesAtPoint_LDADD = $(LDADD)
CAT_SurfPlotValuesAtPoint_DEPENDENCIES = ../libCAT.la
CAT_SurfRatio_SOURCES = CAT_SurfRatio.c
CAT_SurfRatio_OBJECTS = CAT_SurfRatio.$(OBJEXT)
CAT_SurfRatio_LDADD = $(LDADD)
CAT_SurfRatio_DEPENDENCIES = ../libCAT.la
CAT_SurfReduce_SOURCES = CAT_SurfReduce.c
CAT_SurfReduce_OBJECTS = CAT_SurfReduce.$(OBJEXT)
CAT_SurfReduce_LDADD = $(LDADD)
CAT_SurfReduce_DEPENDENCIES = ../libCAT.la
CAT_SurfRefine_SOURCES = CAT_SurfRefine.c
CAT_SurfRefine_OBJECTS = CAT_SurfRefine.$(OBJEXT)
CAT_SurfRefine_LDADD = $(LDADD)
CAT_SurfRefine_DEPENDENCIES = ../libCAT.la
CAT_SurfResample_SOURCES = CAT_SurfResample.c
CAT_SurfResample_OBJECTS = CAT_SurfResample.$(OBJEXT)
CAT_SurfResample_LDADD = $(LDADD)
CAT_SurfResample_DEPENDENCIES = ../libCAT.la
CAT_SurfResampleMulti_SOURCES = CAT_SurfResampleMulti.c
CAT_SurfResampleMulti_OBJECTS = CAT_SurfResampleMulti.$(OBJEXT)
CAT_SurfResampleMulti_LDADD = $(LDADD)
CAT_SurfResampleMulti_DEPENDENCIES = ../libCAT.la
CAT_SurfResampleSpherical_SOURCES = CAT_SurfResampleSpherical.c
CAT_SurfResampleSpherical_OBJECTS =  \
	CAT_SurfResampleSpherical.$(OBJEXT)
CAT_SurfResampleSpherical_LDADD = $(LDADD)
CAT_SurfResampleSpherical_DEPENDENCIES = ../libCAT.la
CAT_SurfResampleSphericalSPH_SOURCES = CAT_SurfResampleSphericalSPH.c
CAT_SurfResampleSphericalSPH_OBJECTS =  \
	CAT_SurfResampleSphericalSPH.$(OBJEXT)
CAT_SurfResampleSphericalSPH_LDADD = $(LDADD)
CAT_SurfResampleSphericalSPH_DEPENDENCIES = ../libCAT.la
CAT_SurfSPH2Surf_SOURCES = CAT_SurfSPH2Surf.c
CAT_SurfSPH2Surf_OBJECTS = CAT_SurfSPH2Surf.$(OBJEXT)
CAT_SurfSPH2Surf_LDADD = $(LDADD)
CAT_SurfSPH2Surf_DEPENDENCIES = ../libCAT.la
CAT_SurfSelfIntersect_SOURCES = CAT_SurfSelfIntersect.c
CAT_SurfSelfIntersect_OBJECTS = CAT_SurfSelfIntersect.$(OBJEXT)
CAT_SurfSelfIntersect_LDADD = $(LDADD)
CAT_SurfSelfIntersect_DEPENDENCIES = ../libCAT.la
CAT_SurfSeparateClusters_SOURCES = CAT_SurfSeparateClusters.c
CAT_SurfSeparateClusters_OBJECTS = CAT_SurfSeparateClusters.$(OBJEXT)
CAT_SurfSeparateClusters_LDADD = $(LDADD)
CAT_SurfSeparateClusters_DEPENDENCIES = ../libCAT.la
CAT_SurfSeparatePolygons_SOURCES = CAT_SurfSeparatePolygons.c
CAT_SurfSeparatePolygons_OBJECTS = CAT_SurfSeparatePolygons.$(OBJEXT)
CAT_SurfSeparatePolygons_LDADD = $(LDADD)
CAT_SurfSeparatePolygons_DEPENDENCIES = ../libCAT.la
CAT_SurfSharpness_SOURCES = CAT_SurfSharpness.c
CAT_SurfSharpness_OBJECTS = CAT_SurfSharpness.$(OBJEXT)
CAT_SurfSharpness_LDADD = $(LDADD)
CAT_SurfSharpness_DEPENDENCIES = ../libCAT.la
CAT_SurfSheet2Surf_SOURCES = CAT_SurfSheet2Surf.c
CAT_SurfSheet2Surf_OBJECTS = CAT_SurfSheet2Surf.$(OBJEXT)
CAT_SurfSheet2Surf_LDADD = $(LDADD)
CAT_SurfSheet2Surf_DEPENDENCIES = ../libCAT.la
CAT_SurfSmooth_SOURCES = CAT_SurfSmooth.c
CAT_SurfSmooth_OBJECTS = CAT_SurfSmooth.$(OBJEXT)
CAT_SurfSmooth_LDADD = $(LDADD)
CAT_SurfSmooth_DEPENDENCIES = ../libCAT.la
CAT_SurfSmoothAreal_SOURCES = CAT_SurfSmoothAreal.c
CAT_SurfSmoothAreal_OBJECTS = CAT_SurfSmoothAreal.$(OBJEXT)
CAT_SurfSmoothAreal_LDADD = $(LDADD)
CAT_SurfSmoothAreal_DEPENDENCIES = ../libCAT.la
CAT_SurfSmoothConvexity_SOURCES = CAT_SurfSmoothConvexity.c
CAT_SurfSmoothConvexity_OBJECTS = CAT_SurfSmoothConvexity.$(OBJEXT)
CAT_SurfSmoothConvexity_LDADD = $(LDADD)
CAT_SurfSmoothConvexity_DEPENDENCIES = ../libCAT.la
CAT_SurfSmoothDiffusion_SOURCES = CAT_SurfSmoothDiffusion.c
CAT_SurfSmoothDiffusion_OBJECTS = CAT_SurfSmoothDiffusion.$(OBJEXT)
CAT_SurfSmoothDiffusion_LDADD = $(LDADD)
CAT_SurfSmoothDiffusion_DEPENDENCIES = ../libCAT.la
CAT_SurfSmoothLaplacian_SOURCES = CAT_SurfSmoothLaplacian.c
CAT_SurfSmoothLaplacian_OBJECTS = CAT_SurfSmoothLaplacian.$(OBJEXT)
CAT_SurfSmoothLaplacian_LDADD = $(LDADD)
CAT_SurfSmoothLaplacian_DEPENDENCIES = ../libCAT.la
CAT_SurfSmoothSharpness_SOURCES = CAT_SurfSmoothSharpness.c
CAT_SurfSmoothSharpness_OBJECTS = CAT_SurfSmoothSharpness.$(OBJEXT)
CAT_SurfSmoothSharpness_LDADD = $(LDADD)
CAT_SurfSmoothSharpness_DEPENDENCIES = ../libCAT.la
CAT_SurfSulcusDepth_SOURCES = CAT_SurfSulcusDepth.c
CAT_SurfSulcusDepth_OBJECTS = CAT_SurfSulcusDepth.$(OBJEXT)
CAT_SurfSulcusDepth_LDADD = $(LDADD)
CAT_SurfSulcusDepth_DEPENDENCIES = ../libCAT.la
CAT_SurfWarp_SOURCES = CAT_SurfWarp.c
CAT_SurfWarp_OBJECTS = CAT_SurfWarp.$(OBJEXT)
CAT_SurfWarp_LDADD = $(LDADD)
CAT_SurfWarp_DEPENDENCIES = ../libCAT.la
CAT_SurfWarpDemon_SOURCES = CAT_SurfWarpDemon.c
CAT_SurfWarpDemon_OBJECTS = CAT_SurfWarpDemon.$(OBJEXT)
CAT_SurfWarpDemon_LDADD = $(LDADD)
CAT_SurfWarpDemon_DEPENDENCIES = ../libCAT.la
CAT_Test_SOURCES = CAT_Test.c
CAT_Test_OBJECTS = CAT_Test.$(OBJEXT)
CAT_Test_LDADD = $(LDADD)
CAT_Test_DEPENDENCIES = ../libCAT.la
CAT_Vol2Surf_SOURCES = CAT_Vol2Surf.c
CAT_Vol2Surf_OBJECTS = CAT_Vol2Surf.$(OBJEXT)
CAT_Vol2Surf_LDADD = $(LDADD)
CAT_Vol2Surf_DEPENDENCIES = ../libCAT.la
CAT_VolAmap_SOURCES = CAT_VolAmap.c
CAT_VolAmap_OBJECTS = CAT_VolAmap.$(OBJEXT)
CAT_VolAmap_LDADD = $(LDADD)
CAT_VolAmap_DEPENDENCIES = ../libCAT.la
CAT_VolAverage_SOURCES = CAT_VolAverage.c
CAT_VolAverage_OBJECTS = CAT_VolAverage.$(OBJEXT)
CAT_VolAverage_LDADD = $(LDADD)
CAT_VolAverage_DEPENDENCIES = ../libCAT.la
CAT_VolMarchingCubes_SOURCES = CAT_VolMarchingCubes.c
CAT_VolMarchingCubes_OBJECTS = CAT_VolMarchingCubes.$(OBJEXT)
CAT_VolMarchingCubes_LDADD = $(LDADD)
CAT_VolMarchingCubes_DEPENDENCIES = ../libCAT.la
CAT_VolSanlm_SOURCES = CAT_VolSanlm.c
CAT_VolSanlm_OBJECTS = CAT_VolSanlm.$(OBJEXT)
CAT_VolSanlm_LDADD = $(LDADD)
CAT_VolSanlm_DEPENDENCIES = ../libCAT.la
CAT_VolSmooth_SOURCES = CAT_VolSmooth.c
CAT_VolSmooth_OBJECTS = CAT_VolSmooth.$(OBJEXT)
CAT_VolSmooth_LDADD = $(LDADD)
CAT_VolSmooth_DEPENDENCIES = ../libCAT.la
CAT_VolThicknessPbt_SOURCES = CAT_VolThicknessPbt.c
CAT_VolThicknessPbt_OBJECTS = CAT_VolThicknessPbt.$(OBJEXT)
CAT_VolThicknessPbt_LDADD = $(LDADD)
CAT_VolThicknessPbt_DEPENDENCIES = ../libCAT.la
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(dist_bin_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/CAT_Surf2ConvexHull.Po \
	./$(DEPDIR)/CAT_Surf2PialWhite.Po ./$(DEPDIR)/CAT_Surf2SPH.Po \
	./$(DEPDIR)/CAT_Surf2Sheet.Po ./$(DEPDIR)/CAT_Surf2Sphere.Po \
	./$(DEPDIR)/CAT_SurfAddValues.Po \
	./$(DEPDIR)/CAT_SurfAngularDistortion.Po \
	./$(DEPDIR)/CAT_SurfApplyWarp.Po \
	./$(DEPDIR)/CAT_SurfApplyWarpValues.Po \
	./$(DEPDIR)/CAT_SurfArea.Po \
	./$(DEPDIR)/CAT_SurfAreaDistortion.Po \
	./$(DEPDIR)/CAT_SurfArtifacts.Po \
	./$(DEPDIR)/CAT_SurfAverage.Po \
	./$(DEPDIR)/CAT_SurfCentral2Pial.Po \
	./$(DEPDIR)/CAT_SurfConvert.Po \
	./$(DEPDIR)/CAT_SurfConvexity.Po \
	./$(DEPDIR)/CAT_SurfCorrectThicknessFolding.Po \
	./$(DEPDIR)/CAT_SurfCurvature.Po ./$(DEPDIR)/CAT_SurfDeform.Po \
	./$(DEPDIR)/CAT_SurfDepthPotential.Po \
	./$(DEPDIR)/CAT_SurfDistance.Po \
	./$(DEPDIR)/CAT_SurfFixTopology.Po \
	./$(DEPDIR)/CAT_SurfFractalDimension.Po \
	./$(DEPDIR)/CAT_SurfHausdorff.Po \
	./$(DEPDIR)/CAT_SurfIsometize.Po \
	./$(DEPDIR)/CAT_SurfMarkDefects.Po \
	./$(DEPDIR)/CAT_SurfMeasure2Txt.Po \
	./$(DEPDIR)/CAT_SurfMetricDistortion.Po \
	./$(DEPDIR)/CAT_SurfPlotValuesAtMaximum.Po \
	./$(DEPDIR)/CAT_SurfPlotValuesAtPoint.Po \
	./$(DEPDIR)/CAT_SurfRatio.Po ./$(DEPDIR)/CAT_SurfReduce.Po \
	./$(DEPDIR)/CAT_SurfRefine.Po ./$(DEPDIR)/CAT_SurfResample.Po \
	./$(DEPDIR)/CAT_SurfResampleMulti.Po \
	./$(DEPDIR)/CAT_SurfResampleSpherical.Po \
	./$(DEPDIR)/CAT_SurfResampleSphericalSPH.Po \
	./$(DEPDIR)/CAT_SurfSPH2Surf.Po \
	./$(DEPDIR)/CAT_SurfSelfIntersect.Po \
	./$(DEPDIR)/CAT_SurfSeparateClusters.Po \
	./$(DEPDIR)/CAT_SurfSeparatePolygons.Po \
	./$(DEPDIR)/CAT_SurfSharpness.Po \
	./$(DEPDIR)/CAT_SurfSheet2Surf.Po \
	./$(DEPDIR)/CAT_SurfSmooth.Po \
	./$(DEPDIR)/CAT_SurfSmoothAreal.Po \
	./$(DEPDIR)/CAT_SurfSmoothConvexity.Po \
	./$(DEPDIR)/CAT_SurfSmoothDiffusion.Po \
	./$(DEPDIR)/CAT_SurfSmoothLaplacian.Po \
	./$(DEPDIR)/CAT_SurfSmoothSharpness.Po \
	./$(DEPDIR)/CAT_SurfSulcusDepth.Po ./$(DEPDIR)/CAT_SurfWarp.Po \
	./$(DEPDIR)/CAT_SurfWarpDemon.Po ./$(DEPDIR)/CAT_Test.Po \
	./$(DEPDIR)/CAT_Vol2Surf.Po ./$(DEPDIR)/CAT_VolAmap.Po \
	./$(DEPDIR)/CAT_VolAverage.Po \
	./$(DEPDIR)/CAT_VolMarchingCubes.Po \
	./$(DEPDIR)/CAT_VolSanlm.Po ./$(DEPDIR)/CAT_VolSmooth.Po \
	./$(DEPDIR)/CAT_VolThicknessPbt.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = CAT_Surf2ConvexHull.c CAT_Surf2PialWhite.c CAT_Surf2SPH.c \
	CAT_Surf2Sheet.c CAT_Surf2Sphere.c CAT_SurfAddValues.c \
	CAT_SurfAngularDistortion.c CAT_SurfApplyWarp.c \
	CAT_SurfApplyWarpValues.c CAT_SurfArea.c \
	CAT_SurfAreaDistortion.c CAT_SurfArtifacts.c CAT_SurfAverage.c \
	CAT_SurfCentral2Pial.c CAT_SurfConvert.c CAT_SurfConvexity.c \
	CAT_SurfCorrectThicknessFolding.c CAT_SurfCurvature.c \
	CAT_SurfDeform.c CAT_SurfDepthPotential.c CAT_SurfDistance.c \
	CAT_SurfFixTopology.c CAT_SurfFractalDimension.c \
	CAT_SurfHausdorff.c CAT_SurfIsometize.c CAT_SurfMarkDefects.c \
	CAT_SurfMeasure2Txt.c CAT_SurfMetricDistortion.c \
	CAT_SurfPlotValuesAtMaximum.c CAT_SurfPlotValuesAtPoint.c \
	CAT_SurfRatio.c CAT_SurfReduce.c CAT_SurfRefine.c \
	CAT_SurfResample.c CAT_SurfResampleMulti.c \
	CAT_SurfResampleSpherical.c CAT_SurfResampleSphericalSPH.c \
	CAT_SurfSPH2Surf.c CAT_SurfSelfIntersect.c \
	CAT_SurfSeparateClusters.c CAT_SurfSeparatePolygons.c \
	CAT_SurfSharpness.c CAT_SurfSheet2Surf.c CAT_SurfSmooth.c \
	CAT_SurfSmoothAreal.c CAT_SurfSmoothConvexity.c \
	CAT_SurfSmoothDiffusion.c CAT_SurfSmoothLaplacian.c \
	CAT_SurfSmoothSharpness.c CAT_SurfSulcusDepth.c CAT_SurfWarp.c \
	CAT_SurfWarpDemon.c CAT_Test.c CAT_Vol2Surf.c CAT_VolAmap.c \
	CAT_VolAverage.c CAT_VolMarchingCubes.c CAT_VolSanlm.c \
	CAT_VolSmooth.c CAT_VolThicknessPbt.c
DIST_SOURCES = CAT_Surf2ConvexHull.c CAT_Surf2PialWhite.c \
	CAT_Surf2SPH.c CAT_Surf2Sheet.c CAT_Surf2Sphere.c \
	CAT_SurfAddValues.c CAT_SurfAngularDistortion.c \
	CAT_SurfApplyWarp.c CAT_SurfApplyWarpValues.c CAT_SurfArea.c \
	CAT_SurfAreaDistortion.c CAT_SurfArtifacts.c CAT_SurfAverage.c \
	CAT_SurfCentral2Pial.c CAT_SurfConvert.c CAT_SurfConvexity.c \
	CAT_SurfCorrectThicknessFolding.c CAT_SurfCurvature.c \
	CAT_SurfDeform.c CAT_SurfDepthPotential.c CAT_SurfDistance.c \
	CAT_SurfFixTopology.c CAT_SurfFractalDimension.c \
	CAT_SurfHausdorff.c CAT_SurfIsometize.c CAT_SurfMarkDefects.c \
	CAT_SurfMeasure2Txt.c CAT_SurfMetricDistortion.c \
	CAT_SurfPlotValuesAtMaximum.c CAT_SurfPlotValuesAtPoint.c \
	CAT_SurfRatio.c CAT_SurfReduce.c CAT_SurfRefine.c \
	CAT_SurfResample.c CAT_SurfResampleMulti.c \
	CAT_SurfResampleSpherical.c CAT_SurfResampleSphericalSPH.c \
	CAT_SurfSPH2Surf.c CAT_SurfSelfIntersect.c \
	CAT_SurfSeparateClusters.c CAT_SurfSeparatePolygons.c \
	CAT_SurfSharpness.c CAT_SurfSheet2Surf.c CAT_SurfSmooth.c \
	CAT_SurfSmoothAreal.c CAT_SurfSmoothConvexity.c \
	CAT_SurfSmoothDiffusion.c CAT_SurfSmoothLaplacian.c \
	CAT_SurfSmoothSharpness.c CAT_SurfSulcusDepth.c CAT_SurfWarp.c \
	CAT_SurfWarpDemon.c CAT_Test.c CAT_Vol2Surf.c CAT_VolAmap.c \
	CAT_VolAverage.c CAT_VolMarchingCubes.c CAT_VolSanlm.c \
	CAT_VolSmooth.c CAT_VolThicknessPbt.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/Users/gaser/Dropbox/GitHub/CAT-Surface/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} '/Users/gaser/Dropbox/GitHub/CAT-Surface/missing' autoconf
AUTOHEADER = ${SHELL} '/Users/gaser/Dropbox/GitHub/CAT-Surface/missing' autoheader
AUTOMAKE = ${SHELL} '/Users/gaser/Dropbox/GitHub/CAT-Surface/missing' automake-1.16
AWK = awk
CC = gcc 
CCDEPMODE = depmode=gcc3
CFLAGS = -O3 -fwrapv
CPPFLAGS =  -I/usr/local/include -I/opt/X11/include -O3 
CSCOPE = cscope
CTAGS = ctags
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -fwrapv
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = -Wl,-no_compact_unwind -Wl,-no_compact_unwind -L/usr/local/lib -L/opt/X11/lib
LIBOBJS = 
LIBS = -lfftw3 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} '/Users/gaser/Dropbox/GitHub/CAT-Surface/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = ../../install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = cortex-analysis-tools
PACKAGE_BUGREPORT = Christian Gaser <christian.gaser@uni-jena.de>
PACKAGE_NAME = Cortex Analysis Tools
PACKAGE_STRING = Cortex Analysis Tools 1.0
PACKAGE_TARNAME = cortex-analysis-tools
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.0
abs_builddir = /Users/gaser/Dropbox/GitHub/CAT-Surface/build-native-arm64/Progs
abs_srcdir = /Users/gaser/Dropbox/GitHub/CAT-Surface/build-native-arm64/../Progs
abs_top_builddir = /Users/gaser/Dropbox/GitHub/CAT-Surface/build-native-arm64
abs_top_srcdir = /Users/gaser/Dropbox/GitHub/CAT-Surface/build-native-arm64/..
ac_ct_AR = ar
ac_ct_CC = gcc 
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = aarch64-apple-darwin24.5.0
build_alias = 
build_cpu = aarch64
build_os = darwin24.5.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = aarch64-apple-darwin24.5.0
host_alias = 
host_cpu = aarch64
host_os = darwin24.5.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/gaser/Dropbox/GitHub/CAT-Surface/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../Progs
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ../..

# Compiler flags
AM_CFLAGS = -DHAVE_ZLIB -I$(top_srcdir)/Include -I$(top_srcdir)/3rdparty/dartel \
    -I$(top_srcdir)/3rdparty/genus0 -I$(top_srcdir)/3rdparty/nifti \
    -I$(top_srcdir)/3rdparty/nifti -I$(top_srcdir)/3rdparty/s2kit10 \
    -I$(top_srcdir)/3rdparty/gifticlib -I$(top_srcdir)/3rdparty/zlib \
    -I$(top_srcdir)/3rdparty/volume_io/Include \
    -I$(top_srcdir)/3rdparty/bicpl-surface/Include \
    -I$(top_srcdir)/3rdparty/bicpl-surface/Include/bicpl \
    -I$(top_srcdir)/3rdparty/nii2mesh

AM_CPPFLAGS = ${AM_CFLAGS}

# Linker flags
LDADD = ../libCAT.la -lm

# Distribute scripts
dist_bin_SCRIPTS = \
    CAT_ResampleFS_ui \
    CAT_FractalDimensionFS_ui \
    CAT_Resample_ui \
    CAT_FractalDimension_ui \
    CAT_DumpCurvL4FS_ui \
    CAT_DumpSurfArea_ui \
    CAT_SulcusDepth_ui \
    CAT_DumpCurv_ui

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Progs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Progs/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

CAT_Surf2ConvexHull$(EXEEXT): $(CAT_Surf2ConvexHull_OBJECTS) $(CAT_Surf2ConvexHull_DEPENDENCIES) $(EXTRA_CAT_Surf2ConvexHull_DEPENDENCIES) 
	@rm -f CAT_Surf2ConvexHull$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_Surf2ConvexHull_OBJECTS) $(CAT_Surf2ConvexHull_LDADD) $(LIBS)

CAT_Surf2PialWhite$(EXEEXT): $(CAT_Surf2PialWhite_OBJECTS) $(CAT_Surf2PialWhite_DEPENDENCIES) $(EXTRA_CAT_Surf2PialWhite_DEPENDENCIES) 
	@rm -f CAT_Surf2PialWhite$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_Surf2PialWhite_OBJECTS) $(CAT_Surf2PialWhite_LDADD) $(LIBS)

CAT_Surf2SPH$(EXEEXT): $(CAT_Surf2SPH_OBJECTS) $(CAT_Surf2SPH_DEPENDENCIES) $(EXTRA_CAT_Surf2SPH_DEPENDENCIES) 
	@rm -f CAT_Surf2SPH$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_Surf2SPH_OBJECTS) $(CAT_Surf2SPH_LDADD) $(LIBS)

CAT_Surf2Sheet$(EXEEXT): $(CAT_Surf2Sheet_OBJECTS) $(CAT_Surf2Sheet_DEPENDENCIES) $(EXTRA_CAT_Surf2Sheet_DEPENDENCIES) 
	@rm -f CAT_Surf2Sheet$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_Surf2Sheet_OBJECTS) $(CAT_Surf2Sheet_LDADD) $(LIBS)

CAT_Surf2Sphere$(EXEEXT): $(CAT_Surf2Sphere_OBJECTS) $(CAT_Surf2Sphere_DEPENDENCIES) $(EXTRA_CAT_Surf2Sphere_DEPENDENCIES) 
	@rm -f CAT_Surf2Sphere$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_Surf2Sphere_OBJECTS) $(CAT_Surf2Sphere_LDADD) $(LIBS)

CAT_SurfAddValues$(EXEEXT): $(CAT_SurfAddValues_OBJECTS) $(CAT_SurfAddValues_DEPENDENCIES) $(EXTRA_CAT_SurfAddValues_DEPENDENCIES) 
	@rm -f CAT_SurfAddValues$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfAddValues_OBJECTS) $(CAT_SurfAddValues_LDADD) $(LIBS)

CAT_SurfAngularDistortion$(EXEEXT): $(CAT_SurfAngularDistortion_OBJECTS) $(CAT_SurfAngularDistortion_DEPENDENCIES) $(EXTRA_CAT_SurfAngularDistortion_DEPENDENCIES) 
	@rm -f CAT_SurfAngularDistortion$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfAngularDistortion_OBJECTS) $(CAT_SurfAngularDistortion_LDADD) $(LIBS)

CAT_SurfApplyWarp$(EXEEXT): $(CAT_SurfApplyWarp_OBJECTS) $(CAT_SurfApplyWarp_DEPENDENCIES) $(EXTRA_CAT_SurfApplyWarp_DEPENDENCIES) 
	@rm -f CAT_SurfApplyWarp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfApplyWarp_OBJECTS) $(CAT_SurfApplyWarp_LDADD) $(LIBS)

CAT_SurfApplyWarpValues$(EXEEXT): $(CAT_SurfApplyWarpValues_OBJECTS) $(CAT_SurfApplyWarpValues_DEPENDENCIES) $(EXTRA_CAT_SurfApplyWarpValues_DEPENDENCIES) 
	@rm -f CAT_SurfApplyWarpValues$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfApplyWarpValues_OBJECTS) $(CAT_SurfApplyWarpValues_LDADD) $(LIBS)

CAT_SurfArea$(EXEEXT): $(CAT_SurfArea_OBJECTS) $(CAT_SurfArea_DEPENDENCIES) $(EXTRA_CAT_SurfArea_DEPENDENCIES) 
	@rm -f CAT_SurfArea$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfArea_OBJECTS) $(CAT_SurfArea_LDADD) $(LIBS)

CAT_SurfAreaDistortion$(EXEEXT): $(CAT_SurfAreaDistortion_OBJECTS) $(CAT_SurfAreaDistortion_DEPENDENCIES) $(EXTRA_CAT_SurfAreaDistortion_DEPENDENCIES) 
	@rm -f CAT_SurfAreaDistortion$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfAreaDistortion_OBJECTS) $(CAT_SurfAreaDistortion_LDADD) $(LIBS)

CAT_SurfArtifacts$(EXEEXT): $(CAT_SurfArtifacts_OBJECTS) $(CAT_SurfArtifacts_DEPENDENCIES) $(EXTRA_CAT_SurfArtifacts_DEPENDENCIES) 
	@rm -f CAT_SurfArtifacts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfArtifacts_OBJECTS) $(CAT_SurfArtifacts_LDADD) $(LIBS)

CAT_SurfAverage$(EXEEXT): $(CAT_SurfAverage_OBJECTS) $(CAT_SurfAverage_DEPENDENCIES) $(EXTRA_CAT_SurfAverage_DEPENDENCIES) 
	@rm -f CAT_SurfAverage$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfAverage_OBJECTS) $(CAT_SurfAverage_LDADD) $(LIBS)

CAT_SurfCentral2Pial$(EXEEXT): $(CAT_SurfCentral2Pial_OBJECTS) $(CAT_SurfCentral2Pial_DEPENDENCIES) $(EXTRA_CAT_SurfCentral2Pial_DEPENDENCIES) 
	@rm -f CAT_SurfCentral2Pial$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfCentral2Pial_OBJECTS) $(CAT_SurfCentral2Pial_LDADD) $(LIBS)

CAT_SurfConvert$(EXEEXT): $(CAT_SurfConvert_OBJECTS) $(CAT_SurfConvert_DEPENDENCIES) $(EXTRA_CAT_SurfConvert_DEPENDENCIES) 
	@rm -f CAT_SurfConvert$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfConvert_OBJECTS) $(CAT_SurfConvert_LDADD) $(LIBS)

CAT_SurfConvexity$(EXEEXT): $(CAT_SurfConvexity_OBJECTS) $(CAT_SurfConvexity_DEPENDENCIES) $(EXTRA_CAT_SurfConvexity_DEPENDENCIES) 
	@rm -f CAT_SurfConvexity$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfConvexity_OBJECTS) $(CAT_SurfConvexity_LDADD) $(LIBS)

CAT_SurfCorrectThicknessFolding$(EXEEXT): $(CAT_SurfCorrectThicknessFolding_OBJECTS) $(CAT_SurfCorrectThicknessFolding_DEPENDENCIES) $(EXTRA_CAT_SurfCorrectThicknessFolding_DEPENDENCIES) 
	@rm -f CAT_SurfCorrectThicknessFolding$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfCorrectThicknessFolding_OBJECTS) $(CAT_SurfCorrectThicknessFolding_LDADD) $(LIBS)

CAT_SurfCurvature$(EXEEXT): $(CAT_SurfCurvature_OBJECTS) $(CAT_SurfCurvature_DEPENDENCIES) $(EXTRA_CAT_SurfCurvature_DEPENDENCIES) 
	@rm -f CAT_SurfCurvature$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfCurvature_OBJECTS) $(CAT_SurfCurvature_LDADD) $(LIBS)

CAT_SurfDeform$(EXEEXT): $(CAT_SurfDeform_OBJECTS) $(CAT_SurfDeform_DEPENDENCIES) $(EXTRA_CAT_SurfDeform_DEPENDENCIES) 
	@rm -f CAT_SurfDeform$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfDeform_OBJECTS) $(CAT_SurfDeform_LDADD) $(LIBS)

CAT_SurfDepthPotential$(EXEEXT): $(CAT_SurfDepthPotential_OBJECTS) $(CAT_SurfDepthPotential_DEPENDENCIES) $(EXTRA_CAT_SurfDepthPotential_DEPENDENCIES) 
	@rm -f CAT_SurfDepthPotential$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfDepthPotential_OBJECTS) $(CAT_SurfDepthPotential_LDADD) $(LIBS)

CAT_SurfDistance$(EXEEXT): $(CAT_SurfDistance_OBJECTS) $(CAT_SurfDistance_DEPENDENCIES) $(EXTRA_CAT_SurfDistance_DEPENDENCIES) 
	@rm -f CAT_SurfDistance$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfDistance_OBJECTS) $(CAT_SurfDistance_LDADD) $(LIBS)

CAT_SurfFixTopology$(EXEEXT): $(CAT_SurfFixTopology_OBJECTS) $(CAT_SurfFixTopology_DEPENDENCIES) $(EXTRA_CAT_SurfFixTopology_DEPENDENCIES) 
	@rm -f CAT_SurfFixTopology$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfFixTopology_OBJECTS) $(CAT_SurfFixTopology_LDADD) $(LIBS)

CAT_SurfFractalDimension$(EXEEXT): $(CAT_SurfFractalDimension_OBJECTS) $(CAT_SurfFractalDimension_DEPENDENCIES) $(EXTRA_CAT_SurfFractalDimension_DEPENDENCIES) 
	@rm -f CAT_SurfFractalDimension$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfFractalDimension_OBJECTS) $(CAT_SurfFractalDimension_LDADD) $(LIBS)

CAT_SurfHausdorff$(EXEEXT): $(CAT_SurfHausdorff_OBJECTS) $(CAT_SurfHausdorff_DEPENDENCIES) $(EXTRA_CAT_SurfHausdorff_DEPENDENCIES) 
	@rm -f CAT_SurfHausdorff$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfHausdorff_OBJECTS) $(CAT_SurfHausdorff_LDADD) $(LIBS)

CAT_SurfIsometize$(EXEEXT): $(CAT_SurfIsometize_OBJECTS) $(CAT_SurfIsometize_DEPENDENCIES) $(EXTRA_CAT_SurfIsometize_DEPENDENCIES) 
	@rm -f CAT_SurfIsometize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfIsometize_OBJECTS) $(CAT_SurfIsometize_LDADD) $(LIBS)

CAT_SurfMarkDefects$(EXEEXT): $(CAT_SurfMarkDefects_OBJECTS) $(CAT_SurfMarkDefects_DEPENDENCIES) $(EXTRA_CAT_SurfMarkDefects_DEPENDENCIES) 
	@rm -f CAT_SurfMarkDefects$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfMarkDefects_OBJECTS) $(CAT_SurfMarkDefects_LDADD) $(LIBS)

CAT_SurfMeasure2Txt$(EXEEXT): $(CAT_SurfMeasure2Txt_OBJECTS) $(CAT_SurfMeasure2Txt_DEPENDENCIES) $(EXTRA_CAT_SurfMeasure2Txt_DEPENDENCIES) 
	@rm -f CAT_SurfMeasure2Txt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfMeasure2Txt_OBJECTS) $(CAT_SurfMeasure2Txt_LDADD) $(LIBS)

CAT_SurfMetricDistortion$(EXEEXT): $(CAT_SurfMetricDistortion_OBJECTS) $(CAT_SurfMetricDistortion_DEPENDENCIES) $(EXTRA_CAT_SurfMetricDistortion_DEPENDENCIES) 
	@rm -f CAT_SurfMetricDistortion$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfMetricDistortion_OBJECTS) $(CAT_SurfMetricDistortion_LDADD) $(LIBS)

CAT_SurfPlotValuesAtMaximum$(EXEEXT): $(CAT_SurfPlotValuesAtMaximum_OBJECTS) $(CAT_SurfPlotValuesAtMaximum_DEPENDENCIES) $(EXTRA_CAT_SurfPlotValuesAtMaximum_DEPENDENCIES) 
	@rm -f CAT_SurfPlotValuesAtMaximum$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfPlotValuesAtMaximum_OBJECTS) $(CAT_SurfPlotValuesAtMaximum_LDADD) $(LIBS)

CAT_SurfPlotValuesAtPoint$(EXEEXT): $(CAT_SurfPlotValuesAtPoint_OBJECTS) $(CAT_SurfPlotValuesAtPoint_DEPENDENCIES) $(EXTRA_CAT_SurfPlotValuesAtPoint_DEPENDENCIES) 
	@rm -f CAT_SurfPlotValuesAtPoint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfPlotValuesAtPoint_OBJECTS) $(CAT_SurfPlotValuesAtPoint_LDADD) $(LIBS)

CAT_SurfRatio$(EXEEXT): $(CAT_SurfRatio_OBJECTS) $(CAT_SurfRatio_DEPENDENCIES) $(EXTRA_CAT_SurfRatio_DEPENDENCIES) 
	@rm -f CAT_SurfRatio$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfRatio_OBJECTS) $(CAT_SurfRatio_LDADD) $(LIBS)

CAT_SurfReduce$(EXEEXT): $(CAT_SurfReduce_OBJECTS) $(CAT_SurfReduce_DEPENDENCIES) $(EXTRA_CAT_SurfReduce_DEPENDENCIES) 
	@rm -f CAT_SurfReduce$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfReduce_OBJECTS) $(CAT_SurfReduce_LDADD) $(LIBS)

CAT_SurfRefine$(EXEEXT): $(CAT_SurfRefine_OBJECTS) $(CAT_SurfRefine_DEPENDENCIES) $(EXTRA_CAT_SurfRefine_DEPENDENCIES) 
	@rm -f CAT_SurfRefine$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfRefine_OBJECTS) $(CAT_SurfRefine_LDADD) $(LIBS)

CAT_SurfResample$(EXEEXT): $(CAT_SurfResample_OBJECTS) $(CAT_SurfResample_DEPENDENCIES) $(EXTRA_CAT_SurfResample_DEPENDENCIES) 
	@rm -f CAT_SurfResample$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfResample_OBJECTS) $(CAT_SurfResample_LDADD) $(LIBS)

CAT_SurfResampleMulti$(EXEEXT): $(CAT_SurfResampleMulti_OBJECTS) $(CAT_SurfResampleMulti_DEPENDENCIES) $(EXTRA_CAT_SurfResampleMulti_DEPENDENCIES) 
	@rm -f CAT_SurfResampleMulti$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfResampleMulti_OBJECTS) $(CAT_SurfResampleMulti_LDADD) $(LIBS)

CAT_SurfResampleSpherical$(EXEEXT): $(CAT_SurfResampleSpherical_OBJECTS) $(CAT_SurfResampleSpherical_DEPENDENCIES) $(EXTRA_CAT_SurfResampleSpherical_DEPENDENCIES) 
	@rm -f CAT_SurfResampleSpherical$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfResampleSpherical_OBJECTS) $(CAT_SurfResampleSpherical_LDADD) $(LIBS)

CAT_SurfResampleSphericalSPH$(EXEEXT): $(CAT_SurfResampleSphericalSPH_OBJECTS) $(CAT_SurfResampleSphericalSPH_DEPENDENCIES) $(EXTRA_CAT_SurfResampleSphericalSPH_DEPENDENCIES) 
	@rm -f CAT_SurfResampleSphericalSPH$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfResampleSphericalSPH_OBJECTS) $(CAT_SurfResampleSphericalSPH_LDADD) $(LIBS)

CAT_SurfSPH2Surf$(EXEEXT): $(CAT_SurfSPH2Surf_OBJECTS) $(CAT_SurfSPH2Surf_DEPENDENCIES) $(EXTRA_CAT_SurfSPH2Surf_DEPENDENCIES) 
	@rm -f CAT_SurfSPH2Surf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSPH2Surf_OBJECTS) $(CAT_SurfSPH2Surf_LDADD) $(LIBS)

CAT_SurfSelfIntersect$(EXEEXT): $(CAT_SurfSelfIntersect_OBJECTS) $(CAT_SurfSelfIntersect_DEPENDENCIES) $(EXTRA_CAT_SurfSelfIntersect_DEPENDENCIES) 
	@rm -f CAT_SurfSelfIntersect$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSelfIntersect_OBJECTS) $(CAT_SurfSelfIntersect_LDADD) $(LIBS)

CAT_SurfSeparateClusters$(EXEEXT): $(CAT_SurfSeparateClusters_OBJECTS) $(CAT_SurfSeparateClusters_DEPENDENCIES) $(EXTRA_CAT_SurfSeparateClusters_DEPENDENCIES) 
	@rm -f CAT_SurfSeparateClusters$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSeparateClusters_OBJECTS) $(CAT_SurfSeparateClusters_LDADD) $(LIBS)

CAT_SurfSeparatePolygons$(EXEEXT): $(CAT_SurfSeparatePolygons_OBJECTS) $(CAT_SurfSeparatePolygons_DEPENDENCIES) $(EXTRA_CAT_SurfSeparatePolygons_DEPENDENCIES) 
	@rm -f CAT_SurfSeparatePolygons$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSeparatePolygons_OBJECTS) $(CAT_SurfSeparatePolygons_LDADD) $(LIBS)

CAT_SurfSharpness$(EXEEXT): $(CAT_SurfSharpness_OBJECTS) $(CAT_SurfSharpness_DEPENDENCIES) $(EXTRA_CAT_SurfSharpness_DEPENDENCIES) 
	@rm -f CAT_SurfSharpness$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSharpness_OBJECTS) $(CAT_SurfSharpness_LDADD) $(LIBS)

CAT_SurfSheet2Surf$(EXEEXT): $(CAT_SurfSheet2Surf_OBJECTS) $(CAT_SurfSheet2Surf_DEPENDENCIES) $(EXTRA_CAT_SurfSheet2Surf_DEPENDENCIES) 
	@rm -f CAT_SurfSheet2Surf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSheet2Surf_OBJECTS) $(CAT_SurfSheet2Surf_LDADD) $(LIBS)

CAT_SurfSmooth$(EXEEXT): $(CAT_SurfSmooth_OBJECTS) $(CAT_SurfSmooth_DEPENDENCIES) $(EXTRA_CAT_SurfSmooth_DEPENDENCIES) 
	@rm -f CAT_SurfSmooth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSmooth_OBJECTS) $(CAT_SurfSmooth_LDADD) $(LIBS)

CAT_SurfSmoothAreal$(EXEEXT): $(CAT_SurfSmoothAreal_OBJECTS) $(CAT_SurfSmoothAreal_DEPENDENCIES) $(EXTRA_CAT_SurfSmoothAreal_DEPENDENCIES) 
	@rm -f CAT_SurfSmoothAreal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSmoothAreal_OBJECTS) $(CAT_SurfSmoothAreal_LDADD) $(LIBS)

CAT_SurfSmoothConvexity$(EXEEXT): $(CAT_SurfSmoothConvexity_OBJECTS) $(CAT_SurfSmoothConvexity_DEPENDENCIES) $(EXTRA_CAT_SurfSmoothConvexity_DEPENDENCIES) 
	@rm -f CAT_SurfSmoothConvexity$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSmoothConvexity_OBJECTS) $(CAT_SurfSmoothConvexity_LDADD) $(LIBS)

CAT_SurfSmoothDiffusion$(EXEEXT): $(CAT_SurfSmoothDiffusion_OBJECTS) $(CAT_SurfSmoothDiffusion_DEPENDENCIES) $(EXTRA_CAT_SurfSmoothDiffusion_DEPENDENCIES) 
	@rm -f CAT_SurfSmoothDiffusion$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSmoothDiffusion_OBJECTS) $(CAT_SurfSmoothDiffusion_LDADD) $(LIBS)

CAT_SurfSmoothLaplacian$(EXEEXT): $(CAT_SurfSmoothLaplacian_OBJECTS) $(CAT_SurfSmoothLaplacian_DEPENDENCIES) $(EXTRA_CAT_SurfSmoothLaplacian_DEPENDENCIES) 
	@rm -f CAT_SurfSmoothLaplacian$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSmoothLaplacian_OBJECTS) $(CAT_SurfSmoothLaplacian_LDADD) $(LIBS)

CAT_SurfSmoothSharpness$(EXEEXT): $(CAT_SurfSmoothSharpness_OBJECTS) $(CAT_SurfSmoothSharpness_DEPENDENCIES) $(EXTRA_CAT_SurfSmoothSharpness_DEPENDENCIES) 
	@rm -f CAT_SurfSmoothSharpness$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSmoothSharpness_OBJECTS) $(CAT_SurfSmoothSharpness_LDADD) $(LIBS)

CAT_SurfSulcusDepth$(EXEEXT): $(CAT_SurfSulcusDepth_OBJECTS) $(CAT_SurfSulcusDepth_DEPENDENCIES) $(EXTRA_CAT_SurfSulcusDepth_DEPENDENCIES) 
	@rm -f CAT_SurfSulcusDepth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfSulcusDepth_OBJECTS) $(CAT_SurfSulcusDepth_LDADD) $(LIBS)

CAT_SurfWarp$(EXEEXT): $(CAT_SurfWarp_OBJECTS) $(CAT_SurfWarp_DEPENDENCIES) $(EXTRA_CAT_SurfWarp_DEPENDENCIES) 
	@rm -f CAT_SurfWarp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfWarp_OBJECTS) $(CAT_SurfWarp_LDADD) $(LIBS)

CAT_SurfWarpDemon$(EXEEXT): $(CAT_SurfWarpDemon_OBJECTS) $(CAT_SurfWarpDemon_DEPENDENCIES) $(EXTRA_CAT_SurfWarpDemon_DEPENDENCIES) 
	@rm -f CAT_SurfWarpDemon$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_SurfWarpDemon_OBJECTS) $(CAT_SurfWarpDemon_LDADD) $(LIBS)

CAT_Test$(EXEEXT): $(CAT_Test_OBJECTS) $(CAT_Test_DEPENDENCIES) $(EXTRA_CAT_Test_DEPENDENCIES) 
	@rm -f CAT_Test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_Test_OBJECTS) $(CAT_Test_LDADD) $(LIBS)

CAT_Vol2Surf$(EXEEXT): $(CAT_Vol2Surf_OBJECTS) $(CAT_Vol2Surf_DEPENDENCIES) $(EXTRA_CAT_Vol2Surf_DEPENDENCIES) 
	@rm -f CAT_Vol2Surf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_Vol2Surf_OBJECTS) $(CAT_Vol2Surf_LDADD) $(LIBS)

CAT_VolAmap$(EXEEXT): $(CAT_VolAmap_OBJECTS) $(CAT_VolAmap_DEPENDENCIES) $(EXTRA_CAT_VolAmap_DEPENDENCIES) 
	@rm -f CAT_VolAmap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_VolAmap_OBJECTS) $(CAT_VolAmap_LDADD) $(LIBS)

CAT_VolAverage$(EXEEXT): $(CAT_VolAverage_OBJECTS) $(CAT_VolAverage_DEPENDENCIES) $(EXTRA_CAT_VolAverage_DEPENDENCIES) 
	@rm -f CAT_VolAverage$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_VolAverage_OBJECTS) $(CAT_VolAverage_LDADD) $(LIBS)

CAT_VolMarchingCubes$(EXEEXT): $(CAT_VolMarchingCubes_OBJECTS) $(CAT_VolMarchingCubes_DEPENDENCIES) $(EXTRA_CAT_VolMarchingCubes_DEPENDENCIES) 
	@rm -f CAT_VolMarchingCubes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_VolMarchingCubes_OBJECTS) $(CAT_VolMarchingCubes_LDADD) $(LIBS)

CAT_VolSanlm$(EXEEXT): $(CAT_VolSanlm_OBJECTS) $(CAT_VolSanlm_DEPENDENCIES) $(EXTRA_CAT_VolSanlm_DEPENDENCIES) 
	@rm -f CAT_VolSanlm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_VolSanlm_OBJECTS) $(CAT_VolSanlm_LDADD) $(LIBS)

CAT_VolSmooth$(EXEEXT): $(CAT_VolSmooth_OBJECTS) $(CAT_VolSmooth_DEPENDENCIES) $(EXTRA_CAT_VolSmooth_DEPENDENCIES) 
	@rm -f CAT_VolSmooth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_VolSmooth_OBJECTS) $(CAT_VolSmooth_LDADD) $(LIBS)

CAT_VolThicknessPbt$(EXEEXT): $(CAT_VolThicknessPbt_OBJECTS) $(CAT_VolThicknessPbt_DEPENDENCIES) $(EXTRA_CAT_VolThicknessPbt_DEPENDENCIES) 
	@rm -f CAT_VolThicknessPbt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CAT_VolThicknessPbt_OBJECTS) $(CAT_VolThicknessPbt_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/CAT_Surf2ConvexHull.Po # am--include-marker
include ./$(DEPDIR)/CAT_Surf2PialWhite.Po # am--include-marker
include ./$(DEPDIR)/CAT_Surf2SPH.Po # am--include-marker
include ./$(DEPDIR)/CAT_Surf2Sheet.Po # am--include-marker
include ./$(DEPDIR)/CAT_Surf2Sphere.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfAddValues.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfAngularDistortion.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfApplyWarp.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfApplyWarpValues.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfArea.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfAreaDistortion.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfArtifacts.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfAverage.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfCentral2Pial.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfConvert.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfConvexity.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfCorrectThicknessFolding.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfCurvature.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfDeform.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfDepthPotential.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfDistance.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfFixTopology.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfFractalDimension.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfHausdorff.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfIsometize.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfMarkDefects.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfMeasure2Txt.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfMetricDistortion.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfPlotValuesAtMaximum.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfPlotValuesAtPoint.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfRatio.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfReduce.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfRefine.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfResample.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfResampleMulti.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfResampleSpherical.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfResampleSphericalSPH.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSPH2Surf.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSelfIntersect.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSeparateClusters.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSeparatePolygons.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSharpness.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSheet2Surf.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSmooth.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSmoothAreal.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSmoothConvexity.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSmoothDiffusion.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSmoothLaplacian.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSmoothSharpness.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfSulcusDepth.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfWarp.Po # am--include-marker
include ./$(DEPDIR)/CAT_SurfWarpDemon.Po # am--include-marker
include ./$(DEPDIR)/CAT_Test.Po # am--include-marker
include ./$(DEPDIR)/CAT_Vol2Surf.Po # am--include-marker
include ./$(DEPDIR)/CAT_VolAmap.Po # am--include-marker
include ./$(DEPDIR)/CAT_VolAverage.Po # am--include-marker
include ./$(DEPDIR)/CAT_VolMarchingCubes.Po # am--include-marker
include ./$(DEPDIR)/CAT_VolSanlm.Po # am--include-marker
include ./$(DEPDIR)/CAT_VolSmooth.Po # am--include-marker
include ./$(DEPDIR)/CAT_VolThicknessPbt.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/CAT_Surf2ConvexHull.Po
	-rm -f ./$(DEPDIR)/CAT_Surf2PialWhite.Po
	-rm -f ./$(DEPDIR)/CAT_Surf2SPH.Po
	-rm -f ./$(DEPDIR)/CAT_Surf2Sheet.Po
	-rm -f ./$(DEPDIR)/CAT_Surf2Sphere.Po
	-rm -f ./$(DEPDIR)/CAT_SurfAddValues.Po
	-rm -f ./$(DEPDIR)/CAT_SurfAngularDistortion.Po
	-rm -f ./$(DEPDIR)/CAT_SurfApplyWarp.Po
	-rm -f ./$(DEPDIR)/CAT_SurfApplyWarpValues.Po
	-rm -f ./$(DEPDIR)/CAT_SurfArea.Po
	-rm -f ./$(DEPDIR)/CAT_SurfAreaDistortion.Po
	-rm -f ./$(DEPDIR)/CAT_SurfArtifacts.Po
	-rm -f ./$(DEPDIR)/CAT_SurfAverage.Po
	-rm -f ./$(DEPDIR)/CAT_SurfCentral2Pial.Po
	-rm -f ./$(DEPDIR)/CAT_SurfConvert.Po
	-rm -f ./$(DEPDIR)/CAT_SurfConvexity.Po
	-rm -f ./$(DEPDIR)/CAT_SurfCorrectThicknessFolding.Po
	-rm -f ./$(DEPDIR)/CAT_SurfCurvature.Po
	-rm -f ./$(DEPDIR)/CAT_SurfDeform.Po
	-rm -f ./$(DEPDIR)/CAT_SurfDepthPotential.Po
	-rm -f ./$(DEPDIR)/CAT_SurfDistance.Po
	-rm -f ./$(DEPDIR)/CAT_SurfFixTopology.Po
	-rm -f ./$(DEPDIR)/CAT_SurfFractalDimension.Po
	-rm -f ./$(DEPDIR)/CAT_SurfHausdorff.Po
	-rm -f ./$(DEPDIR)/CAT_SurfIsometize.Po
	-rm -f ./$(DEPDIR)/CAT_SurfMarkDefects.Po
	-rm -f ./$(DEPDIR)/CAT_SurfMeasure2Txt.Po
	-rm -f ./$(DEPDIR)/CAT_SurfMetricDistortion.Po
	-rm -f ./$(DEPDIR)/CAT_SurfPlotValuesAtMaximum.Po
	-rm -f ./$(DEPDIR)/CAT_SurfPlotValuesAtPoint.Po
	-rm -f ./$(DEPDIR)/CAT_SurfRatio.Po
	-rm -f ./$(DEPDIR)/CAT_SurfReduce.Po
	-rm -f ./$(DEPDIR)/CAT_SurfRefine.Po
	-rm -f ./$(DEPDIR)/CAT_SurfResample.Po
	-rm -f ./$(DEPDIR)/CAT_SurfResampleMulti.Po
	-rm -f ./$(DEPDIR)/CAT_SurfResampleSpherical.Po
	-rm -f ./$(DEPDIR)/CAT_SurfResampleSphericalSPH.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSPH2Surf.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSelfIntersect.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSeparateClusters.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSeparatePolygons.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSharpness.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSheet2Surf.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmooth.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmoothAreal.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmoothConvexity.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmoothDiffusion.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmoothLaplacian.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmoothSharpness.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSulcusDepth.Po
	-rm -f ./$(DEPDIR)/CAT_SurfWarp.Po
	-rm -f ./$(DEPDIR)/CAT_SurfWarpDemon.Po
	-rm -f ./$(DEPDIR)/CAT_Test.Po
	-rm -f ./$(DEPDIR)/CAT_Vol2Surf.Po
	-rm -f ./$(DEPDIR)/CAT_VolAmap.Po
	-rm -f ./$(DEPDIR)/CAT_VolAverage.Po
	-rm -f ./$(DEPDIR)/CAT_VolMarchingCubes.Po
	-rm -f ./$(DEPDIR)/CAT_VolSanlm.Po
	-rm -f ./$(DEPDIR)/CAT_VolSmooth.Po
	-rm -f ./$(DEPDIR)/CAT_VolThicknessPbt.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/CAT_Surf2ConvexHull.Po
	-rm -f ./$(DEPDIR)/CAT_Surf2PialWhite.Po
	-rm -f ./$(DEPDIR)/CAT_Surf2SPH.Po
	-rm -f ./$(DEPDIR)/CAT_Surf2Sheet.Po
	-rm -f ./$(DEPDIR)/CAT_Surf2Sphere.Po
	-rm -f ./$(DEPDIR)/CAT_SurfAddValues.Po
	-rm -f ./$(DEPDIR)/CAT_SurfAngularDistortion.Po
	-rm -f ./$(DEPDIR)/CAT_SurfApplyWarp.Po
	-rm -f ./$(DEPDIR)/CAT_SurfApplyWarpValues.Po
	-rm -f ./$(DEPDIR)/CAT_SurfArea.Po
	-rm -f ./$(DEPDIR)/CAT_SurfAreaDistortion.Po
	-rm -f ./$(DEPDIR)/CAT_SurfArtifacts.Po
	-rm -f ./$(DEPDIR)/CAT_SurfAverage.Po
	-rm -f ./$(DEPDIR)/CAT_SurfCentral2Pial.Po
	-rm -f ./$(DEPDIR)/CAT_SurfConvert.Po
	-rm -f ./$(DEPDIR)/CAT_SurfConvexity.Po
	-rm -f ./$(DEPDIR)/CAT_SurfCorrectThicknessFolding.Po
	-rm -f ./$(DEPDIR)/CAT_SurfCurvature.Po
	-rm -f ./$(DEPDIR)/CAT_SurfDeform.Po
	-rm -f ./$(DEPDIR)/CAT_SurfDepthPotential.Po
	-rm -f ./$(DEPDIR)/CAT_SurfDistance.Po
	-rm -f ./$(DEPDIR)/CAT_SurfFixTopology.Po
	-rm -f ./$(DEPDIR)/CAT_SurfFractalDimension.Po
	-rm -f ./$(DEPDIR)/CAT_SurfHausdorff.Po
	-rm -f ./$(DEPDIR)/CAT_SurfIsometize.Po
	-rm -f ./$(DEPDIR)/CAT_SurfMarkDefects.Po
	-rm -f ./$(DEPDIR)/CAT_SurfMeasure2Txt.Po
	-rm -f ./$(DEPDIR)/CAT_SurfMetricDistortion.Po
	-rm -f ./$(DEPDIR)/CAT_SurfPlotValuesAtMaximum.Po
	-rm -f ./$(DEPDIR)/CAT_SurfPlotValuesAtPoint.Po
	-rm -f ./$(DEPDIR)/CAT_SurfRatio.Po
	-rm -f ./$(DEPDIR)/CAT_SurfReduce.Po
	-rm -f ./$(DEPDIR)/CAT_SurfRefine.Po
	-rm -f ./$(DEPDIR)/CAT_SurfResample.Po
	-rm -f ./$(DEPDIR)/CAT_SurfResampleMulti.Po
	-rm -f ./$(DEPDIR)/CAT_SurfResampleSpherical.Po
	-rm -f ./$(DEPDIR)/CAT_SurfResampleSphericalSPH.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSPH2Surf.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSelfIntersect.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSeparateClusters.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSeparatePolygons.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSharpness.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSheet2Surf.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmooth.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmoothAreal.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmoothConvexity.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmoothDiffusion.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmoothLaplacian.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSmoothSharpness.Po
	-rm -f ./$(DEPDIR)/CAT_SurfSulcusDepth.Po
	-rm -f ./$(DEPDIR)/CAT_SurfWarp.Po
	-rm -f ./$(DEPDIR)/CAT_SurfWarpDemon.Po
	-rm -f ./$(DEPDIR)/CAT_Test.Po
	-rm -f ./$(DEPDIR)/CAT_Vol2Surf.Po
	-rm -f ./$(DEPDIR)/CAT_VolAmap.Po
	-rm -f ./$(DEPDIR)/CAT_VolAverage.Po
	-rm -f ./$(DEPDIR)/CAT_VolMarchingCubes.Po
	-rm -f ./$(DEPDIR)/CAT_VolSanlm.Po
	-rm -f ./$(DEPDIR)/CAT_VolSmooth.Po
	-rm -f ./$(DEPDIR)/CAT_VolThicknessPbt.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dist_binSCRIPTS \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-dist_binSCRIPTS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
